# This is a basic workflow to help you get started with Actions
name: Deploy with Capistrano

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        # ruby-version: 3.0.1 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - uses: miloserdow/capistrano-deploy@master
      with:
        target: production # Defines the environment that will be used for the deployment
        deploy_key: ${{ secrets.MONITOR }} # Name of the variable configured in Settings/Secrets of your github project
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        script: | 
          chown -R sifouf:sifouf /var/www/html/monitordz/releases/*
          nginx -s reload
          cd /var/www/html/monitordz/current

    # whoami
    # ls -alrth /var/www
    # ls -alrth /var/www/html
    # ls -alrth /var/www/html/monitordz
    # ls -alrth /var/www/html/monitordz/releases
    #     - run: whoami
    # - run: ls -alrth /var/www
    # - run: ls -alrth /var/www/html
    # # - run: ls -alrth /var/www/html/monitordz
    # # - run: ls -alrth /var/www/html/monitordz/releases  && bundle exec sidekiq -d -L /var/www/html/monitordz/current/log/sidekiq.log -e production